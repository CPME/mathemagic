---
title: Mathemagic Architecture
---

classDiagram
    class Client {
        +main()
        +process_problem()
    }
    
    class Server {
        +prompt_to_py()
        +execute_python()
    }
    
    class Pint {
        +UnitRegistry
        +Quantity
    }
    
    class MCP {
        +FastMCP
        +Context
    }
    
    Client --> Server : HTTP requests
    Server --> MCP : Uses
    Server --> Pint : Uses for unit handling
    
    note for Client "Command-line interface\nInteracts with server"
    note for Server "Processes math problems\nConverts to Python\nExecutes code"
    note for Pint "Handles units and conversions"

---
title: Mathemagic Flow
---

flowchart TD
    A[User] -->|Math Problem| B[Client]
    B -->|API Call| C[Server]
    C -->|prompt_to_py| D[LLM]
    D -->|Python Code| C
    C -->|Code| B
    B -->|Display Code| A
    A -->|Confirm Execution| B
    B -->|execute_python| C
    C -->|Execute| E[Python Interpreter]
    E -->|Result| C
    C -->|Result| B
    B -->|Display Result| A
